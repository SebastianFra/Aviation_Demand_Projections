#merge again
GDP_CAP_RPK_adj <- merge(GDP_Cap, RPK_Cap, by = c("year", "iso", "scenario"), all.x=TRUE)
#write.xlsx(GDP_CAP_RPK_adj, "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/RPK_CAP_baseline.xlsx")
#plot 1
GDP_CAP_RPK_adj %>%
mutate(Y2K = year > 2020) %>%
group_by(Y2K) -> GDP_CAP_RPK_adj
GDP_CAP_RPK_adj<-GDP_CAP_RPK_adj %>% filter(iso == "DEU"| iso== "GBR"| iso =="USA"|iso== "FRA"
| iso =="CHN"|iso== "IND"| iso =="ZAF"|iso== "BRA"
| iso =="JPN"|iso== "MEX"| iso =="CAN"|iso== "RUS")
#plot 1
ggplot(GDP_CAP_RPK_adj, aes(x=GDP_CAP, y=RPK_CAP, col = iso))+
geom_line(data = filter(GDP_CAP_RPK_adj, !Y2K), size=1, linetype = "solid") +
geom_line(data = filter(GDP_CAP_RPK_adj, Y2K), size=1, aes(linetype = iso))+
scale_linetype_manual(values=c("twodash", "dotted","dashed", "dotted",
"twodash", "dotted","dashed", "dotted",
"dashed", "dotted","dashed", "dotted"))+
xlab("GDP per capita")+
ylab("RPK per capita")+
facet_wrap(~scenario)+
ggtitle("Total view version")
#plot 2
ggplot(GDP_CAP_RPK_adj, aes(x=GDP_CAP, y=RPK_CAP, col = iso))+
geom_line(data = filter(GDP_CAP_RPK_adj, !Y2K), size=1, linetype = "solid") +
geom_line(data = filter(GDP_CAP_RPK_adj, Y2K), size=1, aes(linetype = iso))+
scale_linetype_manual(values=c("twodash", "dotted","dashed", "dotted",
"twodash", "dotted","dashed", "dotted",
"dashed", "dotted","dashed", "dotted"))+
xlab("GDP per capita")+
ylab("RPK per capita")+
ylim(0,4000)+
xlim(0,75000)+
facet_wrap(~scenario)+
ggtitle("Zoomed in version")
#plot 3
ggplot(GDP_CAP_RPK_adj, aes(x=GDP_CAP, y=RPK_CAP, col = iso))+
geom_line(data = filter(GDP_CAP_RPK_adj, !Y2K), size=1, linetype = "solid") +
geom_line(data = filter(GDP_CAP_RPK_adj, Y2K), size=1, aes(linetype = iso))+
scale_linetype_manual(values=c("twodash", "dotted","dashed", "dotted",
"twodash", "dotted","dashed", "dotted",
"dashed", "dotted","dashed", "dotted"))+
xlab("GDP per capita")+
ylab("RPK per capita")+
ylim(0,3000)+
xlim(0,55000)+
facet_wrap(~scenario)+
ggtitle("historic-to-future transition version")
#3 Temporal trajectories of assumed income elasticity per country group
IE_Trajectories_Leisure <- read_excel("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/IE_Trajectories_Leisure.xlsx")
IE_Trajectories_Business <- read_excel("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/IE_Trajectories_Business.xlsx")
#drop stuff and years
IE_Trajectories_Leisure <-IE_Trajectories_Leisure[ -c(6,7,8,9,11) ]
IE_Trajectories_Business <-IE_Trajectories_Business[ -c(6,7,8,9,11) ]
IE_Trajectories_Leisure <- subset(IE_Trajectories_Leisure, IE_Trajectories_Leisure$year <=2100 & IE_Trajectories_Leisure$year >=2020)
IE_Trajectories_Business <- subset(IE_Trajectories_Business, IE_Trajectories_Business$year <=2100 & IE_Trajectories_Business$year >=2020)
#rename according to SSP
if (REMIND_scenario == "SSP1"){
IE_Trajectories_Leisure <- IE_Trajectories_Leisure %>%
rename(
IE_SSP1_L = eps
)
}else if (REMIND_scenario == "SSP2"){
IE_Trajectories_Leisure <- IE_Trajectories_Leisure %>%
rename(
IE_SSP2_L = eps
)
}else if (REMIND_scenario == "SSP3"){
IE_Trajectories_Leisure <- IE_Trajectories_Leisure %>%
rename(
IE_SSP3_L = eps
)
}else if (REMIND_scenario == "SSP4"){
IE_Trajectories_Leisure <- IE_Trajectories_Leisure %>%
rename(
IE_SSP4_L = eps
)
}else if (REMIND_scenario == "SSP5"){
IE_Trajectories_Leisure <- IE_Trajectories_Leisure %>%
rename(
IE_SSP5_L = eps
)
}else{}
#Business
if (REMIND_scenario == "SSP1"){
IE_Trajectories_Business <- IE_Trajectories_Business %>%
rename(
IE_SSP1_B = eps
)
}else if (REMIND_scenario == "SSP2"){
IE_Trajectories_Business <- IE_Trajectories_Business %>%
rename(
IE_SSP2_B = eps
)
}else if (REMIND_scenario == "SSP3"){
IE_Trajectories_Business <- IE_Trajectories_Business %>%
rename(
IE_SSP3_B = eps
)
}else if (REMIND_scenario == "SSP4"){
IE_Trajectories_Business <- IE_Trajectories_Business %>%
rename(
IE_SSP4_B = eps
)
}else if (REMIND_scenario == "SSP5"){
IE_Trajectories_Business <- IE_Trajectories_Business %>%
rename(
IE_SSP5_B = eps
)
}else{}
#merge IE for Database
Database_SSP_IE_intermediate <-merge(IE_Trajectories_Business,IE_Trajectories_Leisure[,c(1,2,6)], by = c("year", "iso"), all.x=TRUE)
#create Database for different SSPs on global scale
#Database_SSP_IE_new <- IE_Trajectories
if (REMIND_scenario == "SSP1"){
Database_SSP_IE_BL <-Database_SSP_IE_BL[, c("IE_SSP2_B","IE_SSP3_B","IE_SSP4_B","IE_SSP5_B","IE_SSP2_L","IE_SSP3_L","IE_SSP4_L","IE_SSP5_L" ,"year", "iso") ]
}else if(REMIND_scenario == "SSP2"){
Database_SSP_IE_BL <-Database_SSP_IE_BL[, c("IE_SSP5_B","IE_SSP3_B","IE_SSP4_B","IE_SSP1_B","IE_SSP5_L","IE_SSP3_L","IE_SSP4_L","IE_SSP1_L", "year", "iso") ]
}else if(REMIND_scenario == "SSP3"){
Database_SSP_IE_BL <-Database_SSP_IE_BL[, c("IE_SSP5_B","IE_SSP2_B","IE_SSP4_B","IE_SSP1_B","IE_SSP5_L","IE_SSP2_L","IE_SSP4_L","IE_SSP1_L", "year", "iso") ]
}else if(REMIND_scenario == "SSP4"){
Database_SSP_IE_BL <-Database_SSP_IE_BL[, c("IE_SSP5_B","IE_SSP3_B","IE_SSP2_B","IE_SSP1_B","IE_SSP5_L","IE_SSP3_L","IE_SSP2_L","IE_SSP1_L", "year", "iso") ]
}else if(REMIND_scenario == "SSP5"){
Database_SSP_IE_BL<-Database_SSP_IE_BL[, c("IE_SSP2_B","IE_SSP3_B","IE_SSP4_B","IE_SSP1_B", "IE_SSP2_L","IE_SSP3_L","IE_SSP4_L","IE_SSP1_L","year", "iso") ]
}else{}
#merge with new data
Database_SSP_IE_BL <-merge( Database_SSP_IE_intermediate[,c (1,2,6,7)], Database_SSP_IE_BL, by = c("year", "iso"), all.x=TRUE)
#prepare IE Database
Data_IE <- Database_SSP_IE_BL
Data_IE <- melt(Data_IE,  id.vars = c("year", "iso"), variable.name = "IE")
Data_IE <- Data_IE%>%
rename(
scenario = IE)
Data_IE <- Data_IE %>%
rename(
IE = value)
Data_IE$scenario <- gsub("^.{0,3}", "", Data_IE$scenario)
# plot
#rename again
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP1_B","SSP1_Business", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP2_B","SSP2_Business", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP3_B","SSP3_Business", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP4_B","SSP4_Business", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP5_B","SSP5_Business", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP1_L","SSP1_Leisure", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP2_L","SSP2_Leisure", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP3_L","SSP3_Leisure", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP4_L","SSP4_Leisure", Data_IE$scenario )
Data_IE$scenario <- ifelse(Data_IE$scenario  == "SSP5_L","SSP5_Leisure", Data_IE$scenario )
#plot
Data_IE<-Data_IE%>% filter(iso == "DEU"| iso== "GBR"| iso =="USA"|iso== "FRA"
| iso =="CHN"|iso== "IND"| iso =="ZAF"|iso== "BRA"
| iso =="JPN"|iso== "MEX"| iso =="CAN"|iso== "RUS")
Data_IE %>%
mutate(Y2K = year >= 2020) %>%
group_by(Y2K) -> Data_IE
ggplot(Data_IE, aes(x=year, y=IE, col = iso))+
geom_line(data = filter(Data_IE, !Y2K), size=1, linetype = "solid") +
geom_line(data = filter(Data_IE, Y2K), size=1, aes(linetype = iso))+
scale_linetype_manual(values=c("twodash", "dotted","dashed", "dotted",
"twodash", "dotted","dashed", "dotted",
"dashed", "dotted","dashed", "dotted"))+
xlab("years")+
ylab("Income Elasticity")+
facet_wrap(~scenario)
#4 Decay Rate
Decay_Trajectories_Leisure <- read_excel("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/IE_Trajectories_Leisure.xlsx")
Decay_Trajectories_Business <- read_excel("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/IE_Trajectories_Business.xlsx")
#drop stuff and years
Decay_Trajectories_Leisure <-Decay_Trajectories_Leisure[ -c(5,6,7,8,9,10) ]
Decay_Trajectories_Business <-Decay_Trajectories_Business[ -c(5,6,7,8,9,10) ]
Decay_Trajectories_Leisure <- subset(Decay_Trajectories_Leisure, Decay_Trajectories_Leisure$year <=2100 & Decay_Trajectories_Leisure$year >=2020)
Decay_Trajectories_Business <- subset(Decay_Trajectories_Business, Decay_Trajectories_Business$year <=2100 & Decay_Trajectories_Business$year >=2020)
#rename according to SSP
#Leisure
if (REMIND_scenario == "SSP1"){
Decay_Trajectories_Leisure <- Decay_Trajectories_Leisure %>%
rename(
DR_SSP1_L= decay_rate
)
}else if (REMIND_scenario == "SSP2"){
Decay_Trajectories_Leisure <- Decay_Trajectories_Leisure %>%
rename(
DR_SSP2_L= decay_rate
)
}else if (REMIND_scenario == "SSP3"){
Decay_Trajectories_Leisure <- Decay_Trajectories_Leisure %>%
rename(
DR_SSP3_L= decay_rate
)
}else if (REMIND_scenario == "SSP4"){
Decay_Trajectories_Leisure <- Decay_Trajectories_Leisure %>%
rename(
DR_SSP4_L= decay_rate
)
}else if (REMIND_scenario == "SSP5"){
Decay_Trajectories_Leisure <- Decay_Trajectories_Leisure %>%
rename(
DR_SSP5_L= decay_rate
)
}else{}
#Business
if (REMIND_scenario == "SSP1"){
Decay_Trajectories_Business <- Decay_Trajectories_Business %>%
rename(
DR_SSP1_B= decay_rate
)
}else if (REMIND_scenario == "SSP2"){
Decay_Trajectories_Business <- Decay_Trajectories_Business %>%
rename(
DR_SSP2_B= decay_rate
)
}else if (REMIND_scenario == "SSP3"){
Decay_Trajectories_Business <- Decay_Trajectories_Business %>%
rename(
DR_SSP3_B= decay_rate
)
}else if (REMIND_scenario == "SSP4"){
Decay_Trajectories_Business <- Decay_Trajectories_Business %>%
rename(
DR_SSP4_B= decay_rate
)
}else if (REMIND_scenario == "SSP5"){
Decay_Trajectories_Business <- Decay_Trajectories_Business %>%
rename(
DR_SSP5_B= decay_rate
)
}else{}
#merge for database
Database_SSP_DR_intermediate <-merge(Decay_Trajectories_Business,Decay_Trajectories_Leisure[,c(1,2,5)], by = c("year", "iso"), all.x=TRUE)
#create Database for different SSPs on global scale
#Database_SSP_DR <- Decay_Trajectories
if (REMIND_scenario == "SSP1"){
Database_SSP_DR_BL <-Database_SSP_DR_BL[, c("DR_SSP2_B","DR_SSP3_B","DR_SSP4_B","DR_SSP5_B","DR_SSP2_L","DR_SSP3_L","DR_SSP4_L","DR_SSP5_L" ,"year", "iso") ]
}else if(REMIND_scenario == "SSP2"){
Database_SSP_DR_BL <-Database_SSP_DR_BL[, c("DR_SSP5_B","DR_SSP3_B","DR_SSP4_B","DR_SSP1_B","DR_SSP5_L","DR_SSP3_L","DR_SSP4_L","DR_SSP1_L", "year", "iso") ]
}else if(REMIND_scenario == "SSP3"){
Database_SSP_DR_BL <-Database_SSP_DR_BL[, c("DR_SSP5_B","DR_SSP2_B","DR_SSP4_B","DR_SSP1_B","DR_SSP5_L","DR_SSP2_L","DR_SSP4_L","DR_SSP1_L", "year", "iso") ]
}else if(REMIND_scenario == "SSP4"){
Database_SSP_DR_BL <-Database_SSP_DR_BL[, c("DR_SSP5_B","DR_SSP3_B","DR_SSP2_B","DR_SSP1_B","DR_SSP5_L","DR_SSP3_L","DR_SSP2_L","DR_SSP1_L", "year", "iso") ]
}else if(REMIND_scenario == "SSP5"){
Database_SSP_DR_BL<-Database_SSP_DR_BL[, c("DR_SSP2_B","DR_SSP3_B","DR_SSP4_B","DR_SSP1_B", "DR_SSP2_L","DR_SSP3_L","DR_SSP4_L","DR_SSP1_L","year", "iso") ]
}else{}
#merge with new data
Database_SSP_DR_BL <-merge( Database_SSP_DR_BL,Database_SSP_DR_intermediate[,c (1,2,5,6)], by = c("year", "iso"), all.x=TRUE)
#prepare DR Database
Data_DR <- Database_SSP_DR_BL
Data_DR <- melt(Data_DR,  id.vars = c("year", "iso"), variable.name = "DR")
Data_DR <- Data_DR%>%
rename(
scenario = DR)
Data_DR <- Data_DR %>%
rename(
DR = value)
Data_DR$scenario <- gsub("^.{0,3}", "", Data_DR$scenario)
#rename again
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP1_B","SSP1_Business", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP2_B","SSP2_Business", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP3_B","SSP3_Business", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP4_B","SSP4_Business", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP5_B","SSP5_Business", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP1_L","SSP1_Leisure", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP2_L","SSP2_Leisure", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP3_L","SSP3_Leisure", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP4_L","SSP4_Leisure", Data_DR$scenario )
Data_DR$scenario <- ifelse(Data_DR$scenario  == "SSP5_L","SSP5_Leisure", Data_DR$scenario )
#plot
Data_DR<-Data_DR%>% filter(iso == "DEU"| iso== "GBR"| iso =="USA"|iso== "FRA"
| iso =="CHN"|iso== "IND"| iso =="ZAF"|iso== "BRA"
| iso =="JPN"|iso== "MEX"| iso =="CAN"|iso== "RUS")
Data_DR %>%
mutate(Y2K = year >= 2020) %>%
group_by(Y2K) -> Data_DR
ggplot(Data_DR, aes(x=year, y=DR, col = iso))+
geom_line(data = filter(Data_DR, !Y2K), size=1, linetype = "solid") +
geom_line(data = filter(Data_DR, Y2K), size=1, aes(linetype = iso))+
scale_linetype_manual(values=c("twodash", "dotted","dashed", "dotted",
"twodash", "dotted","dashed", "dotted",
"dashed", "dotted","dashed", "dotted"))+
xlab("years")+
ylab("Decay Rate for Income Elasticity")+
facet_wrap(~scenario)
'#5 Plot the Treshold for GDP and RPK
Treshold_Decayrate <- read_csv("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/Treshold_Decayrate_scenarios.csv")
ggplot(Treshold_Decayrate, aes(x=scenario, y=treshold_GDP))+
geom_bar(stat = "identity")+
xlab("scenarios")+
ylab("treshold in USD")
ggplot(Treshold_Decayrate, aes(x=scenario, y=treshold_RPK))+
geom_bar(stat = "identity")+
xlab("scenarios")+
ylab("treshold in RPK")
'
#5: Export the created plots in one pdf file
dev.off()
#6 prepare RPKCAP file
#RPK_baseline.file<-merge(GDP_Cap, RPK_Cap[,c (1,2,4)], by = c("year", "iso"), all.x=TRUE)
#7 safe database
write_xlsx(Database_SSP_country, "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/Database_SSP_country.xlsx")
write_xlsx(Database_SSP_global, "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/Database_SSP_global.xlsx")
write_xlsx(Database_SSP_IE_BL, "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/Database_IE_BL.xlsx")
write_xlsx(Database_SSP_DR_BL, "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Export Data/Database_DR_BL.xlsx")
View(GDP_Cap_RPK_cap_data_L)
##specify folders
#please insert here the path to you local folder
########### IMPORTANT ###################
local_folder= "ADD/YOUR/LOCAL/PATH/HERE"
########### IMPORTANT ###################
setwd(local_folder)
##specify folders
#please insert here the path to you local folder
########### IMPORTANT ###################
local_folder= "ADD/YOUR/LOCAL/PATH/HERE"
########### IMPORTANT ###################
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC/Aviation_Demand_Model"
########### IMPORTANT ###################
setwd(local_folder)
data_folder = file.path(local_folder,"data_folder")
knitr::opts_chunk$set(dev = 'pdf')
require(ggplot2)
require(rmndt)
require(dplyr)
#Combine RDS files
SSP1 <-readRDS(file.path(data_folder,"aviation_demand_SSP1_COVID=TRUE.rds"))
SSP2 <-readRDS(file.path(data_folder,"aviation_demand_SSP2_COVID=TRUE.rds"))
SSP5 <-readRDS(file.path(data_folder,"aviation_demand_SSP5_COVID=TRUE.rds"))
SSP1_noCOVID <-readRDS(file.path(data_folder,"aviation_demand_SSP1_COVID=FALSE.rds"))
SSP2_noCOVID <-readRDS(file.path(data_folder,"aviation_demand_SSP2_COVID=FALSE.rds"))
SSP5_noCOVID <-readRDS(file.path(data_folder,"aviation_demand_SSP5_COVID=FALSE.rds"))
#rename demand
setnames(SSP1, old = "demand", new = "SSP1")
setnames(SSP2, old = "demand", new = "SSP2")
setnames(SSP5, old = "demand", new = "SSP5")
setnames(SSP1_noCOVID, old = "demand", new = "SSP1_noCOVID")
setnames(SSP2_noCOVID, old = "demand", new = "SSP2_noCOVID")
setnames(SSP5_noCOVID, old = "demand", new = "SSP5_noCOVID")
#merge
Country_SSP_Database<- merge(SSP1,SSP2, by = c("iso","year","sector"),all.x = TRUE)
Country_SSP_Database<- merge(Country_SSP_Database,SSP5,by = c("iso","year","sector"),all.x = TRUE)
Country_SSP_Database<- merge(Country_SSP_Database,SSP1_noCOVID,by = c("iso","year","sector"),all.x = TRUE)
Country_SSP_Database<- merge(Country_SSP_Database,SSP2_noCOVID,by = c("iso","year", "sector"),all.x = TRUE)
Country_SSP_Database<- merge(Country_SSP_Database,SSP5_noCOVID,by = c("iso","year", "sector"),all.x = TRUE)
measure.values<-c("SSP1_noCOVID","SSP2_noCOVID","SSP5_noCOVID","SSP1","SSP2","SSP5")
Country_SSP_Database <- melt(Country_SSP_Database ,  measure.vars = measure.values, variable.name = "scenarios")
#Elasticities
SSP1_Elasticitiy_COVID <-readRDS(file.path(data_folder,"elasticities_SSP1_COVID=TRUE.rds"))
SSP2_Elasticitiy_COVID <-readRDS(file.path(data_folder,"elasticities_SSP2_COVID=TRUE.rds"))
SSP5_Elasticitiy_COVID <-readRDS(file.path(data_folder,"elasticities_SSP5_COVID=TRUE.rds"))
#rename demand
setnames(SSP1_Elasticitiy_COVID, old = "income_elasticity_pass_lo", new = "IE_SSP1")
setnames(SSP2_Elasticitiy_COVID, old = "income_elasticity_pass_lo", new = "IE_SSP2")
setnames(SSP5_Elasticitiy_COVID, old = "income_elasticity_pass_lo", new = "IE_SSP5")
#merge
Country_SSP_Database_IE<- merge(SSP1_Elasticitiy_COVID,SSP2_Elasticitiy_COVID, by = c("iso","year"),all.x = TRUE)
Country_SSP_Database_IE<- merge(Country_SSP_Database_IE,SSP5_Elasticitiy_COVID,by = c("iso","year"),all.x = TRUE)
measure.values<-c("IE_SSP1","IE_SSP2","IE_SSP5")
Country_SSP_Database_IE <- melt(Country_SSP_Database_IE ,  measure.vars = measure.values, variable.name = "scenarios")
#plotting palette
legend_title_1 <- "EDGE-T scenarios"
legend_title_2 <- "Reference scenarios"
legend_title_3<- "EDGE-T scenarios & Reference scenarios"
cols = c("reference AIM, SSP5" = "black", "reference AIM, SSP2" = "black", "reference AIM, SSP1" = "black","SSP2" ="blue1",
"SSP1" ="green4","SSP5" ="red","SSP2_noCOVID" ="steelblue4","SSP1_noCOVID" ="darkolivegreen","SSP5_noCOVID" ="darksalmon")
cols1 = c("SSP2" ="blue1","SSP1" ="green4","SSP5" ="red")
cols2 = c("SSP2" ="blue1","SSP1" ="green4","SSP5" ="red","SSP2_noCOVID" ="steelblue4","SSP1_noCOVID" ="darkolivegreen","SSP5_noCOVID" ="darksalmon")
cols3 = c("SSP2" ="blue1","SSP1" ="green4","SSP5" ="red","IATA - reference" = "black")
Country_SSP_Database_global <- Country_SSP_Database
Country_SSP_Database_global <- Country_SSP_Database_global %>% group_by(year,sector,scenarios)
detach("package:dplyr", unload = TRUE)
Country_SSP_Database_global <- Country_SSP_Database
Country_SSP_Database_global <- Country_SSP_Database_global %>% group_by(year,sector,scenarios)
library(dplyr)
Country_SSP_Database_global <- Country_SSP_Database
Country_SSP_Database_global <- Country_SSP_Database_global %>% group_by(year,sector,scenarios)
Country_SSP_Database_global = summarise(Country_SSP_Database_global, global_demand = sum(value))
References = fread(file.path(data_folder,"References.csv"), sep=";", header = T)
References <- subset(References, References$year <=2100 & References$year >=2020)
measure.values<-c("reference_demand_goessling et.al","reference_demand_JADC","reference AIM, SSP2","reference AIM, SSP1","reference AIM, SSP5")
References <- melt(References ,  measure.vars = measure.values, variable.name = 'scenarios')
setnames(References, old = "value", new = "global_demand")
Country_SSP_Database_global <- rbind(Country_SSP_Database_global,References)
#prepare plot
Country_SSP_Database_global$sector <- ifelse(Country_SSP_Database_global$sector == "trn_aviation_intl","Total Aviation Demand", Country_SSP_Database_global$sector)
Country_SSP_Database_global<- Country_SSP_Database_global %>% filter(sector == "Total Aviation Demand")
Country_SSP_Database_global<- Country_SSP_Database_global %>% filter(scenarios == "SSP1"| scenarios == "SSP2"| scenarios ==  "SSP5"| scenarios == "reference AIM, SSP1"| scenarios ==  "reference AIM, SSP2"|scenarios ==  "reference AIM, SSP5"|scenarios == "SSP1_noCOVID"| scenarios == "SSP2_noCOVID"| scenarios ==  "SSP5_noCOVID")
#group by covid
cols = c("reference AIM, SSP5" = "black", "reference AIM, SSP2" = "black", "reference AIM, SSP1" = "black","SSP2" ="blue1",
"SSP1" ="green4","SSP5" ="red","SSP2_noCOVID" ="steelblue4","SSP1_noCOVID" ="darkolivegreen","SSP5_noCOVID" ="darksalmon")
linetype_ref = c("reference AIM, SSP1" = "dashed", "reference AIM, SSP2" ="dotted","reference AIM, SSP5" = "dotdash")
setDT(Country_SSP_Database_global)
Country_SSP_Database_global[, His := ifelse(year < 2020 , TRUE, FALSE)]
Country_SSP_Database_global[, Ref := ifelse(scenarios ==  "reference AIM, SSP1"|scenarios ==  "reference AIM, SSP2"|scenarios ==  "reference AIM, SSP5" , TRUE, FALSE)]
Country_SSP_Database_global$scenarios <- factor(Country_SSP_Database_global$scenarios, levels = c("reference AIM, SSP1", "reference AIM, SSP2", "reference AIM, SSP5","SSP1_noCOVID","SSP1","SSP2_noCOVID","SSP2","SSP5_noCOVID","SSP5"))
total_aviation <- ggplot()+
geom_line(data = filter(Country_SSP_Database_global, Ref), aes(x=year,y=global_demand,group=scenarios, linetype=scenarios))+
geom_line(data = filter(Country_SSP_Database_global, !Ref), aes(x=year,y=global_demand,group=scenarios,colour=scenarios))+
geom_point(data = filter(Country_SSP_Database_global, His), alpha = 0.2, size=1,aes(x=year, y=global_demand,group=scenarios))+
scale_colour_manual(legend_title_1,values =cols )+
scale_linetype_manual(legend_title_2,values =linetype_ref )+
labs(y = "[trillion RPK]", x="", title = "Total Aviation Demand")+
theme_bw()
print(total_aviation)
##specify folders
#please insert here the path to you local folder
########### IMPORTANT ###################
local_folder= "ADD/YOUR/LOCAL/PATH/HERE"
########### IMPORTANT ###################
setwd(local_folder)
##specify folders
#please insert here the path to you local folder
########### IMPORTANT ###################
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC"
########### IMPORTANT ###################
setwd(local_folder)
data_folder = file.path(local_folder,"data_folder")
knitr::opts_chunk$set(dev = 'pdf')
require(ggplot2)
require(rmndt)
require(dplyr)
#Combine RDS files
SSP1 <-readRDS(file.path(data_folder,"aviation_demand_SSP1_COVID=TRUE.rds"))
devtools::load_all("C:/Users/franz/Documents/R/edgeTransportAv")
setConfig(cachefolder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/cache")
setConfig(forcecache=T)
setConfig(outputfolder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output")
setConfig(mappingfolder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/mappings")
load("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/cache/IEA.RData")
#COVID
start_time <- Sys.time()
generateEDGEdata(input_folder = "C:/Users/franz/Documents/R/data_edge",
output_folder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output",
EDGE_scenario="ConvCase", REMIND_scenario="SSP1", saveRDS=TRUE, COVID_scenario = TRUE)
library(madrat)
devtools::load_all("C:/Users/franz/Documents/R/edgeTransportAv")
setConfig(cachefolder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/cache")
setConfig(forcecache=T)
setConfig(outputfolder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output")
setConfig(mappingfolder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/mappings")
load("C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/cache/IEA.RData")
#COVID
start_time <- Sys.time()
generateEDGEdata(input_folder = "C:/Users/franz/Documents/R/data_edge",
output_folder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output",
EDGE_scenario="ConvCase", REMIND_scenario="SSP1", saveRDS=TRUE, COVID_scenario = TRUE)
saveRDS(GDP_POP, "GDP_POP_SSP1.rds")
saveRDS(GDP_country, "GDP_country_SSP1.rds")
saveRDS(POP_country, "POP_country_SPP1.rds")
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC/Aviation_Demand_Model"
setwd(local_folder)
saveRDS(GDP_POP, "GDP_POP_SSP1.rds")
saveRDS(GDP_country, "GDP_country_SSP1.rds")
saveRDS(POP_country, "POP_country_SPP1.rds")
generateEDGEdata(input_folder = "C:/Users/franz/Documents/R/data_edge",
output_folder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output",
EDGE_scenario="ConvCase", REMIND_scenario="SSP2", saveRDS=TRUE, COVID_scenario = TRUE)
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC/Aviation_Demand_Model"
setwd(local_folder)
saveRDS(GDP_POP, "GDP_POP_SSP2.rds")
saveRDS(GDP_country, "GDP_country_SSP2.rds")
saveRDS(POP_country, "POP_country_SPP2.rds")
generateEDGEdata(input_folder = "C:/Users/franz/Documents/R/data_edge",
output_folder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output",
EDGE_scenario="ConvCase", REMIND_scenario="SSP5", saveRDS=TRUE, COVID_scenario = TRUE)
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC/Aviation_Demand_Model"
setwd(local_folder)
saveRDS(GDP_POP, "GDP_POP_SSP5.rds")
saveRDS(GDP_country, "GDP_country_SSP5.rds")
saveRDS(POP_country, "POP_country_SPP5.rds")
saveRDS(price_baseline, "price_baseline_SPP5.rds")
generateEDGEdata(input_folder = "C:/Users/franz/Documents/R/data_edge",
output_folder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output",
EDGE_scenario="ConvCase", REMIND_scenario="SSP2", saveRDS=TRUE, COVID_scenario = TRUE)
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC/Aviation_Demand_Model"
setwd(local_folder)
saveRDS(price_baseline, "price_baseline_SPP5.rds")
generateEDGEdata(input_folder = "C:/Users/franz/Documents/R/data_edge",
output_folder = "C:/Users/franz/Documents/R/Master-Thesis/EDGE-T/Data/inputdata/output",
EDGE_scenario="ConvCase", REMIND_scenario="SSP1", saveRDS=TRUE, COVID_scenario = TRUE)
local_folder= "C:/Users/franz/Documents/R/AviationDemandNCC/Aviation_Demand_Model"
setwd(local_folder)
saveRDS(price_baseline, "price_baseline_SPP1.rds")
required packages
options(repos = c(CRAN = "@CRAN@", pik = "https://rse.pik-potsdam.de/r/packages"))
require(madrat)
require(data.table)
require(rmndt)
# local folder
########### IMPORTANT ###################
#please insert here the path to you local folder
local_folder= "C:/Users/franz/Documents/R/Aviation_Demand_Projections/Aviation_Demand_Model"
########### IMPORTANT ###################
setwd(local_folder)
data_folder = file.path(local_folder,"data_folder")
#load functions
source(file.path(local_folder,"/R/GenerateAviationDemand.R"))
source(file.path(local_folder,"/R/demand_regression.R"))
#COVID
start_time <- Sys.time()
GenerateAviationDemand(data_folder = data_folder,
REMIND_scenario="SSP1", saveRDS=TRUE, COVID_scenario = TRUE)
GenerateAviationDemand(data_folder = data_folder,
REMIND_scenario="SSP2", saveRDS=TRUE, COVID_scenario = TRUE)
GenerateAviationDemand(data_folder = data_folder,
REMIND_scenario="SSP5", saveRDS=TRUE, COVID_scenario = TRUE)
#noCOVID
GenerateAviationDemand(data_folder = data_folder,
REMIND_scenario="SSP1", saveRDS=TRUE, COVID_scenario = FALSE)
GenerateAviationDemand(data_folder = data_folder,
REMIND_scenario="SSP2", saveRDS=TRUE, COVID_scenario = FALSE)
GenerateAviationDemand(data_folder = data_folder,
REMIND_scenario="SSP5", saveRDS=TRUE, COVID_scenario = FALSE)
end_time <- Sys.time()
end_time - start_time
